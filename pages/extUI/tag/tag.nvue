<template>
	<view class="container">
		<uni-card is-full>
			<text class="uni-h6">uni-tag components are mostly used in scenarios such as product classification and key content display.</text>
		</uni-card>

		<uni-section title="Solid tag" type="line" padding>
			<view class="example-body">
				<view class="tag-view">
					<uni-tag text="tag" type="primary" />
				</view>
				<view class="tag-view">
					<uni-tag text="tag" type="success" />
				</view>
				<view class="tag-view">
					<uni-tag text="tag" type="warning" />
				</view>
				<view class="tag-view">
					<uni-tag text="tag" type="error" />
				</view>
				<view class="tag-view">
					<uni-tag text="tag" />
				</view>
			</view>
		</uni-section>

		<uni-section title="inverted tag" subTitle="Use the inverted property to display hollow tabs" type="line" padding>
			<view class="example-body">
				<view class="tag-view">
					<uni-tag :inverted="true" text="tag" type="primary" />
				</view>
				<view class="tag-view">
					<uni-tag :inverted="true" text="tag" type="success" />
				</view>
				<view class="tag-view">
					<uni-tag :inverted="true" text="tag" type="warning" />
				</view>
				<view class="tag-view">
					<uni-tag :inverted="true" text="tag" type="error" />
				</view>
				<view class="tag-view">
					<uni-tag :inverted="true" text="tag" />
				</view>
			</view>
		</uni-section>

		<uni-section title="tag size" subTitle="Use the size property to control the size of the tag" type="line" padding>
			<view class="example-body">
				<view class="tag-view">
					<uni-tag text="tag" type="primary" size="normal" />
				</view>
				<view class="tag-view">
					<uni-tag text="tag" type="primary" size="small" />
				</view>
				<view class="tag-view">
					<uni-tag text="tag" type="primary" size="mini" />
				</view>
			</view>
		</uni-section>

		<uni-section title="circle corner style" subTitle="Use the circle property to control the rounded corners of the tag" type="line" padding>
			<view class="example-body">
				<view class="tag-view">
					<uni-tag :circle="true" text="tag" type="primary" />
				</view>
				<view class="tag-view">
					<uni-tag :circle="true" text="tag" type="primary" size="small" />
				</view>
				<view class="tag-view">
					<uni-tag :circle="true" text="tag" type="primary" size="mini" />
				</view>
			</view>
		</uni-section>

		<uni-section title="Marker Style" subTitle="Using the mark attribute to display mark styles" type="line" padding>
			<view class="example-body">
				<view class="tag-view">
					<uni-tag :mark="true" text="tag" type="primary" size="default" />
				</view>
				<view class="tag-view">
					<uni-tag :mark="true" text="tag" type="primary" size="small" />
				</view>
				<view class="tag-view">
					<uni-tag :mark="true" text="tag" type="primary" size="mini" />
				</view>
			</view>
		</uni-section>
		<uni-section title="disabled" subTitle="Use the disabled property to display the disabled style" type="line" padding>
			<view class="example-body">
				<view class="tag-view">
					<uni-tag disabled text="tag" type="primary" />
				</view>
			</view>
		</uni-section>

		<uni-section title="Custom styles" subTitle="Use the custom-style property to customize the style" type="line" padding>
			<view class="example-body">
				<view class="tag-view">
					<uni-tag text="Custom tag style"
						custom-style="background-color: #4335d6; border-color: #4335d6; color: #fff;">
					</uni-tag>
				</view>
			</view>
		</uni-section>

		<uni-section title="Click on the event" type="line" padding>
			<view class="example-body">
				<view class="tag-view">
					<uni-tag :type="type" text="tag" @click="setType" />
				</view>
				<view class="tag-view">
					<uni-tag :circle="true" :inverted="inverted" text="tag" type="primary" @click="setInverted" />
				</view>
			</view>
		</uni-section>
	</view>
</template>

<script>
	export default {
		components: {},
		data() {
			return {
				type: "default",
				inverted: false,
			};
		},
		methods: {
			setType() {
				let types = ["default", "primary", "success", "warning", "error"];
				let index = types.indexOf(this.type);
				types.splice(index, 1);
				let randomIndex = Math.floor(Math.random() * 4);
				this.type = types[randomIndex];
			},
			setInverted() {
				this.inverted = !this.inverted;
			},
		},
	};
</script>

<style lang="scss">
	.example-body {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		justify-content: flex-start;
		align-items: flex-end;
		flex-wrap: wrap;
	}

	.tag-view {
		margin-right: 10px;
	}
</style>
